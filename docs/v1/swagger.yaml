basePath: /
definitions:
  postgresql.Status:
    properties:
      reason:
        description: 거래정지 혹은 상장폐지 사유
        type: string
      status:
        description: '"active", "inactive", "init", "suspended", "delisted"'
        type: string
    type: object
  postgresql.Symbol:
    properties:
      detail:
        type: string
      id:
        type: integer
      logo:
        type: string
      market:
        type: string
      minimum_order_quantity:
        type: number
      name:
        type: string
      status:
        $ref: '#/definitions/postgresql.Status'
      symbol:
        type: string
      tags:
        items:
          type: string
        type: array
      tick_size:
        type: number
      total_stocks:
        type: integer
      type:
        description: '"stock", "index" 등'
        type: string
      url:
        type: string
    type: object
  postgresql.User:
    properties:
      CreatedAt:
        type: string
      Email:
        type: string
      Password:
        description: Must be hashed
        type: string
      admin:
        type: boolean
      enabled:
        type: boolean
      id:
        type: integer
      type:
        type: integer
      username:
        type: string
    type: object
  template.CancelOrderRequest:
    properties:
      order_id:
        type: string
    type: object
  template.CreateOrderRequest:
    properties:
      price:
        type: number
      quantity:
        type: integer
      type:
        description: e.g., "limit", "market", "stop-limit"
        type: string
    type: object
  template.ModifyOrderRequest:
    properties:
      order_id:
        type: string
      price:
        type: number
      quantity:
        type: integer
      type:
        description: e.g., "limit", "market", "stop-limit"
        type: string
    type: object
host: localhost:4000
info:
  contact: {}
  description: 이것은 Project. Stock Exchange API 문서입니다.
  license:
    name: MIT
    url: https://github.com/0ghost0-dev/PJSe/blob/master/license
  title: Project. Stock Exchange API
  version: "1.0"
paths:
  /api/v1/admin/activation:
    patch:
      consumes:
      - application/json
      description: 첫 번째 관리자 계정을 활성화합니다. 이 작업은 primary admin만 수행할 수 있습니다.
      parameters:
      - description: Basic {BASE64_ENCODED_CREDENTIALS}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 관리자 계정 활성화 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 접근 거부 또는 권한 없음
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 첫 번째 관리자 계정 활성화
      tags:
      - Admin - Activation
  /api/v1/admin/symbol:
    get:
      description: 상장된 모든 심볼의 리스트를 반환합니다.
      parameters:
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 심볼 목록 반환
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/postgresql.Symbol'
              type: array
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 상장된 모든 심볼 조회
      tags:
      - Admin - Symbol
    post:
      consumes:
      - application/json
      description: 새로운 심볼을 상장합니다.
      parameters:
      - description: 상장할 심볼 정보
        in: body
        name: symbol
        required: true
        schema:
          $ref: '#/definitions/postgresql.Symbol'
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: 성공 시 상장된 심볼 정보 반환
          schema:
            additionalProperties:
              $ref: '#/definitions/postgresql.Symbol'
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 심볼 상장
      tags:
      - Admin - Symbol
  /api/v1/admin/symbol/{symbol}:
    delete:
      description: 심볼을 상장 폐지 상태로 변경합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: 상장 폐지 사유
        in: header
        name: reason
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 상장 폐지 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 심볼 상장 폐지
      tags:
      - Admin - Symbol
    get:
      description: 특정 심볼의 정보를 반환합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 심볼 상세 정보 반환
          schema:
            additionalProperties:
              $ref: '#/definitions/postgresql.Symbol'
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 특정 심볼 정보 조회
      tags:
      - Admin - Symbol
  /api/v1/admin/symbol/{symbol}/minimum-order-quantity:
    patch:
      description: 심볼의 최소 주문 수량을 설정합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: '최소 주문 수량 (예: 1)'
        in: query
        name: minimum_order_quantity
        required: true
        type: number
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 최소 주문 수량 변경 메시지 반환
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 최소 주문 수량 설정
      tags:
      - Admin - Symbol
  /api/v1/admin/symbol/{symbol}/status/activate:
    patch:
      description: 심볼을 거래 활성화 상태로 변경합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 상태 변경 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 심볼 거래 활성화
      tags:
      - Admin - Symbol
  /api/v1/admin/symbol/{symbol}/status/inactivate:
    patch:
      description: 심볼을 거래 준비 완료 상태로 변경합니다. (비활성화 상태로 설정)
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 상태 변경 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 심볼 거래 준비 완료 (비활성화 상태로 변경)
      tags:
      - Admin - Symbol
  /api/v1/admin/symbol/{symbol}/status/suspend:
    patch:
      description: 심볼을 거래 비활성화 상태로 변경합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: 비활성화 사유
        in: header
        name: reason
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 상태 변경 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 심볼 거래 비활성화
      tags:
      - Admin - Symbol
  /api/v1/admin/symbol/{symbol}/tick-size:
    patch:
      description: 심볼의 틱 사이즈를 설정합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: '틱 사이즈 (예: 0.01)'
        in: query
        name: tick_size
        required: true
        type: number
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 틱 사이즈 변경 메시지 반환
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 틱 사이즈 설정
      tags:
      - Admin - Symbol
  /api/v1/admin/user:
    get:
      description: 모든 유저의 [ID, 이름, 활성화 여부] 목록을 배열로 반환합니다.
      parameters:
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 유저 목록 반환
          schema:
            additionalProperties:
              items:
                type: integer
              type: array
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 등록된 모든 유저 목록 반환
      tags:
      - Admin - User
    post:
      description: 새로운 유저 등록에 사용할 수 있는 액세스 코드를 생성합니다.
      parameters:
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: 성공 시 액세스 코드 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 새로운 유저 등록용 액세스 코드 생성
      tags:
      - Admin - User
  /api/v1/admin/user/{id}:
    get:
      description: 특정 유저의 상세 정보를 반환합니다.
      parameters:
      - description: 유저 ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 유저 상세 정보 반환
          schema:
            $ref: '#/definitions/postgresql.User'
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 유저를 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 특정 유저의 상세 정보 반환
      tags:
      - Admin - User
  /api/v1/admin/user/{id}/activate:
    patch:
      description: 특정 유저를 활성화합니다. 활성화된 유저는 로그인 및 API 접근이 가능합니다.
      parameters:
      - description: 유저 ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 성공 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 유저를 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 유저 활성화
      tags:
      - Admin - User
  /api/v1/admin/user/{id}/deactivate:
    patch:
      description: 특정 유저를 비활성화합니다. 비활성화된 유저는 로그인 및 API 접근이 불가능합니다.
      parameters:
      - description: 유저 ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 성공 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 유저를 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 유저 비활성화
      tags:
      - Admin - User
  /api/v1/auth/:
    get:
      description: 유효한 계정으로 인증된 경우 "Authenticated" 메시지와 유저 정보를 반환합니다.
      parameters:
      - description: Basic {BASE64_ENCODED_CREDENTIALS}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 인증 메시지 및 유저 정보 반환
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 권한 없음 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 인증 테스트
      tags:
      - Auth
    post:
      consumes:
      - application/json
      description: 새로운 유저를 등록합니다. (Access Code 필요)
      parameters:
      - description: 유저 등록 정보
        in: body
        name: user
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: 성공 시 유저 정보 반환
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 유저 등록
      tags:
      - Auth
  /api/v1/auth/api:
    get:
      consumes:
      - application/json
      description: API 키 상태 확인
      parameters:
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 API 키 정보 반환
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties: true
            type: object
      summary: API 키 상태 확인
      tags:
      - Auth
  /api/v1/auth/token:
    post:
      description: 인증된 유저를 위해 새로운 API 키를 생성합니다. (임시 키, 24시간 유효)
      parameters:
      - description: Basic {base64_encoded_credentials}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 새로운 API 키 및 정보 반환
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: 권한 없음 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 임시 API 키 생성
      tags:
      - Auth
  /api/v1/health:
    get:
      consumes:
      - application/json
      description: 서버 상태 확인 및 데이터베이스 연결 상태 점검
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 서버 상태 반환
          schema:
            additionalProperties: true
            type: object
      summary: 서버 상태 확인
      tags:
      - Health
  /api/v1/market/orders/{symbol}:
    get:
      consumes:
      - application/json
      description: 사용자의 모든 주문을 조회합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 사용자의 모든 주문 정보
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 주문 조회
      tags:
      - Orders
  /api/v1/market/orders/{symbol}/buy:
    delete:
      consumes:
      - application/json
      description: 기존 매수 주문을 취소합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 취소할 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/template.CancelOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 주문이 성공적으로 취소되었음을 알리는 메시지
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 매수 주문 취소
      tags:
      - Orders
    patch:
      consumes:
      - application/json
      description: 기존 매수 주문을 수정합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 수정할 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/template.ModifyOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 주문이 성공적으로 수정되었음을 알리는 메시지
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 매수 주문 수정
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: 지정가, 시장가 주문을 접수합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/template.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 주문이 성공적으로 접수되었음을 알리는 메시지
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 매수 주문
      tags:
      - Orders
  /api/v1/market/orders/{symbol}/sell:
    delete:
      consumes:
      - application/json
      description: 기존 매도 주문을 취소합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 취소할 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/template.CancelOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 주문이 성공적으로 취소되었음을 알리는 메시지
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 매도 주문 취소
      tags:
      - Orders
    patch:
      consumes:
      - application/json
      description: 기존 매도 주문을 수정합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 수정할 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/template.ModifyOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 주문이 성공적으로 수정되었음을 알리는 메시지
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 잘못된 요청 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 매도 주문 수정
      tags:
      - Orders
  /api/v1/market/status:
    get:
      description: 거래소의 현재 세션 상태(오픈, 클로즈 등)를 반환합니다.
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 세션 상태 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 거래소 세션 정보 조회
      tags:
      - Market - Status
  /api/v1/market/status/exchange-data:
    get:
      description: 거래소의 현재 데이터(심볼, 티커 등)를 반환합니다.
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 거래소 데이터 반환
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 거래소 데이터 조회
      tags:
      - Market - Status
  /api/v1/market/symbol:
    get:
      description: 상장된 모든 심볼의 리스트를 반환합니다.
      parameters:
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 심볼 목록 반환
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/postgresql.Symbol'
              type: array
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 상장된 모든 심볼 조회
      tags:
      - Market - Status
  /api/v1/market/symbol/{symbol}:
    get:
      description: 특정 심볼의 정보를 반환합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 심볼 상세 정보 반환
          schema:
            additionalProperties:
              $ref: '#/definitions/postgresql.Symbol'
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 특정 심볼 정보 조회
      tags:
      - Market - Status
  /api/v1/market/symbol/{symbol}/now:
    get:
      description: 특정 심볼의 현재가 정보를 반환합니다.
      parameters:
      - description: '심볼 (예: AAPL)'
        in: path
        name: symbol
        required: true
        type: string
      - description: Bearer {API_KEY}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 성공 시 심볼 현재가 정보 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 심볼을 찾을 수 없을 때 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류 발생 시 에러 메시지 반환
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 특정 심볼 현재가 조회
      tags:
      - Market - Status
  /ws/depth:
    get:
      description: 일일 실시간 호가 데이터를 WebSocket을 통해 구독합니다.
      parameters:
      - description: 특정 타임스탬프 이후의 데이터를 받기 위한 옵션 (0을 입력하면 오늘 발생한 전체 데이터 수신)
        in: query
        name: since
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: WebSocket 연결 성공 및 구독 시작 메시지
          schema:
            type: string
        "400":
          description: 잘못된 요청
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Depth WebSocket
      tags:
      - WebSocket
  /ws/ledger:
    get:
      description: 일일 실시간 체결 데이터를 WebSocket을 통해 구독합니다.
      parameters:
      - description: 특정 타임스탬프 이후의 데이터를 받기 위한 옵션 (0을 입력하면 오늘 발생한 전체 데이터 수신)
        in: query
        name: since
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: WebSocket 연결 성공 및 구독 시작 메시지
          schema:
            type: string
        "400":
          description: 잘못된 요청
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Ledger WebSocket
      tags:
      - WebSocket
  /ws/notify:
    get:
      description: 일일 실시간 알림 데이터를 WebSocket을 통해 구독합니다.
      parameters:
      - description: 특정 타임스탬프 이후의 데이터를 받기 위한 옵션 (0을 입력하면 오늘 발생한 전체 데이터 수신)
        in: query
        name: since
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: WebSocket 연결 성공 및 구독 시작 메시지
          schema:
            type: string
        "400":
          description: 잘못된 요청
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: 인증 실패
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버 오류
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Notify WebSocket
      tags:
      - WebSocket
swagger: "2.0"
